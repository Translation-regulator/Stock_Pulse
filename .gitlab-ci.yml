stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""

default:
  image: docker:latest
  services:
    - docker:dind

# Build FastAPI
build-fastapi:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - docker build -t stockpulse-api ./backend/app

# Build Crawler
build-crawler:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - docker build -t stockpulse-crawler ./backend/crawler

# Build Frontend
build-frontend:
  stage: build
  image: node:18
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - cd frontend
    - npm install
    - npm run build

# Deploy Backend to EC2 Runner
deploy-backend:
  stage: deploy
  tags:
    - ec2 
  needs: [build-fastapi, build-crawler]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - echo "🎯 使用 EC2 Runner 直接部署"

    # 產生 .env 檔案供 FastAPI 使用
    - |
      cat <<EOF > ./backend/app/.env
      DB_HOST=$DB_HOST
      DB_USER=$DB_USER
      DB_PASSWORD=$DB_PASSWORD
      DB_NAME=$DB_NAME
      FUGLE_API_TOKEN=$FUGLE_API_TOKEN
      SECRET_KEY=$SECRET_KEY
      ALGORITHM=$ALGORITHM
      ACCESS_TOKEN_EXPIRE_MINUTES=$ACCESS_TOKEN_EXPIRE_MINUTES
      EOF

    # 部署 FastAPI
    - docker stop fastapi-app || true
    - docker rm fastapi-app || true
    - docker build -t stockpulse-api ./backend/app
    - docker run -d --name fastapi-app -p 8000:8000 --env-file ./backend/app/.env stockpulse-api

    # build Crawler image
    - docker build -t stockpulse-crawler ./backend/crawler

    - echo "後端部署完成"

# Deploy Frontend to S3
deploy-frontend:
  stage: deploy
  image: amazon/aws-cli:2.15.33
  needs: [build-frontend]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - cd frontend
    - aws s3 sync dist/ s3://$AWS_S3_BUCKET --delete
    - aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_ID --paths "/*"
