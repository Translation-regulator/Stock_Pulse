# 定義 CI/CD 所有階段（照順序執行）
stages:
  - build
  - deploy

# 全域變數放在最外層（不能放在 default 裡）
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""

# 全域預設設定：使用 Docker 環境
default:
  image: docker:latest
  services:
    - docker:dind

# Build FastAPI Docker image
build-fastapi:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - backend/app/**
  script:
    - docker build -t stockpulse-api ./backend/app

# Build Crawler Docker image
build-crawler:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - backend/crawler/**
  script:
    - docker build -t stockpulse-crawler ./backend/crawler

# Build Vue 前端（打包產出 dist）
build-frontend:
  stage: build
  image: node:18
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - frontend/**
  script:
    - cd frontend
    - npm install
    - npm run build

# 部署 FastAPI + 爬蟲到 EC2
deploy-backend:
  stage: deploy
  needs: [build-fastapi, build-crawler]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - tar --exclude="__pycache__" -czf backend.tar.gz backend
    - scp -o StrictHostKeyChecking=no backend.tar.gz $SSH_USER@$SSH_HOST:~/
    - |
      ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'EOF'
        set -e
        rm -rf backend
        tar -xzf backend.tar.gz
        cd backend

        # 重啟 FastAPI 容器
        docker stop fastapi-app || true
        docker rm fastapi-app || true
        docker build -t stockpulse-api ./app
        docker run -d --name fastapi-app -p 8000:8000 stockpulse-api

        # 更新 Crawler image（不啟動）
        docker build -t stockpulse-crawler ./crawler

        echo "後端部署完成"
      EOF

# 部署前端 Vue 到 S3 + CloudFront
deploy-frontend:
  stage: deploy
  image: amazon/aws-cli:2.15.33
  needs: [build-frontend]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - cd frontend
    - aws s3 sync dist/ s3://$AWS_S3_BUCKET --delete
    - aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_ID --paths "/*"
