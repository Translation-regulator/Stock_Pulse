stages:
  - build
  - deploy

default:
  image: docker:latest
  services:
    - docker:dind

# Build FastAPI
build-fastapi:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - backend/app/**/*

  script:
    - docker build -t stockpulse-api ./backend/app

# Build Crawler
build-crawler:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - backend/crawler/**/*

  script:
    - docker build -t stockpulse-crawler ./backend/crawler

# Build Frontend (Vue)
build-frontend:
  stage: build
  image: node:18
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - frontend/**/*
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist

# Deploy Backend on EC2
deploy-backend:
  stage: deploy
  tags:
    - ec2
  needs: [build-fastapi, build-crawler]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - backend/**/*

  script:
    - echo "使用 EC2 Runner 直接部署後端"

    # 產生 FastAPI 用的 .env
    - |
      cat <<EOF > ./backend/app/.env
      DB_HOST=$DB_HOST
      DB_USER=$DB_USER
      DB_PASSWORD=$DB_PASSWORD
      DB_NAME=$DB_NAME
      FUGLE_API_TOKEN=$FUGLE_API_TOKEN
      SECRET_KEY=$SECRET_KEY
      ALGORITHM=$ALGORITHM
      ACCESS_TOKEN_EXPIRE_MINUTES=$ACCESS_TOKEN_EXPIRE_MINUTES
      EOF

    - docker stop fastapi-app || true
    - docker rm fastapi-app || true
    - docker build -t stockpulse-api ./backend/app
    - docker run -d --name fastapi-app -p 8000:8000 --env-file ./backend/app/.env stockpulse-api

    - docker build -t stockpulse-crawler ./backend/crawler

    - echo "後端部署完成"

# Deploy Frontend to S3 + CloudFront
deploy-frontend:
  stage: deploy
  image: amazon/aws-cli:2.15.33
  needs: [build-frontend]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - frontend/**/*
        - .gitlab-ci.yml
  script:
    # Debug 環境變數是否存在
    - echo "✅ AWS_S3_BUCKET = $AWS_S3_BUCKET"
    - echo "✅ AWS_DEFAULT_REGION = $AWS_DEFAULT_REGION"

    # 防呆：檢查變數
    - >
      MISSING_VAR=0;
      for var in AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_DEFAULT_REGION AWS_S3_BUCKET AWS_CLOUDFRONT_ID; do
        if [ -z "${!var}" ]; then
          echo "❌ 環境變數 $var 未設定";
          MISSING_VAR=1;
        fi;
      done;
      if [ "$MISSING_VAR" -eq 1 ]; then
        echo "🛑 停止部署，請補齊上方缺少的變數";
        exit 1;
      fi

    # 檢查是否有 dist 資料夾
    - ls -al frontend/dist || echo "❌ frontend/dist 不存在"

    # 執行部署
    - aws s3 sync frontend/dist/ s3://$AWS_S3_BUCKET --region $AWS_DEFAULT_REGION --delete
    - aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_ID --paths "/*"
    - echo "🚀 部署完成"

