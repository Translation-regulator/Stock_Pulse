stages:
  - build
  - deploy

# ✅ 只有 build 階段用 shared runner + docker:dind
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375/

default:
  image: docker:latest
  services:
    - docker:dind

###########################
# 📦 Build FastAPI
###########################
build-fastapi:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - docker build -t stockpulse-api ./backend/app

###########################
# 🐍 Build Crawler
###########################
build-crawler:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - docker build -t stockpulse-crawler ./backend/crawler

###########################
# 🎨 Build Frontend (Vue)
###########################
build-frontend:
  stage: build
  image: node:18
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - cd frontend
    - npm install
    - npm run build

###########################
# 🚀 Deploy Backend on EC2
###########################
deploy-backend:
  stage: deploy
  tags:
    - ec2   # ✅ 僅讓 EC2 Shell Runner 執行這段
  needs: [build-fastapi, build-crawler]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - echo "🎯 使用 EC2 Runner 直接部署"

    # 產生 FastAPI .env
    - |
      cat <<EOF > ./backend/app/.env
      DB_HOST=$DB_HOST
      DB_USER=$DB_USER
      DB_PASSWORD=$DB_PASSWORD
      DB_NAME=$DB_NAME
      FUGLE_API_TOKEN=$FUGLE_API_TOKEN
      SECRET_KEY=$SECRET_KEY
      ALGORITHM=$ALGORITHM
      ACCESS_TOKEN_EXPIRE_MINUTES=$ACCESS_TOKEN_EXPIRE_MINUTES
      EOF

    # 直接在 EC2 本機操作 Docker
    - docker stop fastapi-app || true
    - docker rm fastapi-app || true
    - docker build -t stockpulse-api ./backend/app
    - docker run -d --name fastapi-app -p 8000:8000 --env-file ./backend/app/.env stockpulse-api

    # Crawler image（不啟動）
    - docker build -t stockpulse-crawler ./backend/crawler

    - echo "✅ 後端部署完成"

###########################
# ☁️ Deploy Frontend to S3
###########################
deploy-frontend:
  stage: deploy
  image: amazon/aws-cli:2.15.33
  needs: [build-frontend]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - cd frontend
    - aws s3 sync dist/ s3://$AWS_S3_BUCKET --delete
    - aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_ID --paths "/*"
